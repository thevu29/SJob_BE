services:
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    env_file:
      - .env
    networks:
      - sjob-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 30s
      retries: 3
      start_period: 40s
      timeout: 10s

  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      retries: 3
      start_period: 40s
      timeout: 10s

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  job-seeker-service:
    build: ./job-seeker-service
    container_name: job-seeker-service
    ports:
      - "8082:8082"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  recruiter-service:
    build: ./recruiter-service
    container_name: recruiter-service
    ports:
      - "8083:8083"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  job-service:
    build: ./job-service
    container_name: job-service
    ports:
      - "8084:8084"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - "8085:8085"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8086:8086"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  application-service:
    build: ./application-service
    container_name: application-service
    ports:
      - "8087:8087"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  email-service:
    build: ./email-service
    container_name: email-service
    ports:
      - "8383:8383"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped

  s3-service:
    build: ./s3-service
    container_name: s3-service
    ports:
      - "8282:8282"
    env_file:
      - .env
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - sjob-network
    restart: unless-stopped
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:19092,EXTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - sjob-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    networks:
      - sjob-network
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8181:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - sjob-network
    depends_on:
      - kafka
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "9090:8080"
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
      - keycloak_data:/opt/keycloak/data
    networks:
      - sjob-network
    restart: unless-stopped

networks:
  sjob-network:
    driver: bridge

volumes:
  keycloak_data:
  kafka_data:
  zookeeper_data:
